"""Fixing datos_binarios not null constraint

Revision ID: eb635c92ea55
Revises: 795a79b22d09
Create Date: 2025-09-15 19:58:41.108649

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eb635c92ea55'
down_revision = '795a79b22d09'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Corrección para el error de NOT NULL constraint
    # Eliminar la línea op.drop_table('_alembic_tmp_contrato') si está presente
    # La tabla temporal la gestiona Alembic, no debe ser eliminada manualmente.

    # Paso 1: Agregar la columna como nullable=True para evitar errores con las filas existentes
    with op.batch_alter_table('contrato', schema=None) as batch_op:
        batch_op.add_column(sa.Column('datos_binarios', sa.LargeBinary(), nullable=True))
    
    # Paso 2: Actualizar las filas existentes con un valor por defecto (bytes vacíos)
    # X'' es la sintaxis de SQLite para un valor binario vacío.
    op.execute("UPDATE contrato SET datos_binarios = X''")

    # Paso 3: Alterar la columna para hacerla nullable=False
    with op.batch_alter_table('contrato', schema=None) as batch_op:
        batch_op.alter_column('datos_binarios', existing_type=sa.LargeBinary(), nullable=False)

    # Paso 4: Realizar los otros cambios detectados por Alembic
    with op.batch_alter_table('contrato', schema=None) as batch_op:
        batch_op.alter_column('cliente_id',
                              existing_type=sa.INTEGER(),
                              nullable=True)
        batch_op.drop_column('archivo')
        batch_op.drop_column('fecha_creacion')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('contrato', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fecha_creacion', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('archivo', sa.BLOB(), nullable=False))
        batch_op.alter_column('cliente_id',
                              existing_type=sa.INTEGER(),
                              nullable=False)
        batch_op.drop_column('datos_binarios')

    # La creación de esta tabla en el downgrade es para deshacer la migración original, es lo normal.
    op.create_table('_alembic_tmp_contrato',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('nombre_archivo', sa.VARCHAR(length=255), nullable=False),
    sa.Column('cliente_id', sa.INTEGER(), nullable=True),
    sa.Column('prestamo_individual_id', sa.INTEGER(), nullable=False),
    sa.Column('datos_binarios', sa.BLOB(), nullable=False),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], ),
    sa.ForeignKeyConstraint(['prestamo_individual_id'], ['prestamoindividual.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###